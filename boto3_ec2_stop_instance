import boto3


#def lambda_handler(event, context):   if not call by lambda
    # Get list of regions
ec2_client = boto3.client('ec2')
regions = [region['RegionName']
               for region in ec2_client.describe_regions()['Regions']]

    # Iterate over each region
for region in regions:
    print("Region:", region)
    if region == 'ap-south-1':
        ec2 = boto3.resource('ec2', region_name=region)

        print("Region:", region)

            # Get only running instances
        instances = ec2.instances.filter(
            Filters=[{'Name': 'instance-id', 'Values': ['i-046ae5c8d0ea12244']},{'Name': 'instance-type', 'Values': ['t2.large']}])

        # Stop the instances
        for instance in instances:
            instance.stop()
            print('Stopped instance: ', instance.id)


# [ec2-user@ip-192-168-23-47 python]$ aws ec2 describe-regions
{
    "Regions": [
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.eu-north-1.amazonaws.com",
            "RegionName": "eu-north-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ap-south-1.amazonaws.com",
            "RegionName": "ap-south-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.eu-west-3.amazonaws.com",
            "RegionName": "eu-west-3"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.eu-west-2.amazonaws.com",
            "RegionName": "eu-west-2"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.eu-west-1.amazonaws.com",
            "RegionName": "eu-west-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ap-northeast-2.amazonaws.com",
            "RegionName": "ap-northeast-2"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ap-northeast-1.amazonaws.com",
            "RegionName": "ap-northeast-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.sa-east-1.amazonaws.com",
            "RegionName": "sa-east-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ca-central-1.amazonaws.com",
            "RegionName": "ca-central-1"
        },
        {
            "OptInStatus": "opted-in",
            "Endpoint": "ec2.ap-east-1.amazonaws.com",
            "RegionName": "ap-east-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ap-southeast-1.amazonaws.com",
            "RegionName": "ap-southeast-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.ap-southeast-2.amazonaws.com",
            "RegionName": "ap-southeast-2"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.eu-central-1.amazonaws.com",
            "RegionName": "eu-central-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.us-east-1.amazonaws.com",
            "RegionName": "us-east-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.us-east-2.amazonaws.com",
            "RegionName": "us-east-2"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.us-west-1.amazonaws.com",
            "RegionName": "us-west-1"
        },
        {
            "OptInStatus": "opt-in-not-required",
            "Endpoint": "ec2.us-west-2.amazonaws.com",
            "RegionName": "us-west-2"
        }
    ]
}
